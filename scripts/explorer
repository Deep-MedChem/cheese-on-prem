#!/bin/bash
set -e
EXPLORER_PORT=8507

# Function to display usage
show_help() {
  echo "Usage: cheese explorer [options]"
  echo "Options:"
  echo "  start-app   Start explorer app using the current configuration"
  echo "  stop-apps   Stop all explorer apps"
  echo "  configure   Configure explorer app using a YAML configuration file"
  echo "  add-database   Add a new database to the app"
  echo "  remove-database   Remove a current database from the app"
  echo "  -h, --help       Show this help message"
  exit 1
}

# Check if no arguments are passed
if [ $# -eq 0 ]; then
    # Show help if no arguments
    show_help
    exit 0
fi


# Helpers 
convert_to_absolute_path() {
    local input_path="$1"

    # Check if the path is already absolute
    if [[ "$input_path" == /* ]]; then
        # It's already absolute, just return it
        echo "$input_path"
    else
        # It's a relative path, convert it to absolute
        echo "$(pwd)/$input_path"
    fi
}


# Parse command-line arguments manually
while [[ $# -gt 0 ]]; do
  case "$1" in
    --port)
      port="$2"
      EXPLORER_PORT=$port:8001
      shift 2
      ;;

    configure)    
      current_config_file="${HOME}/.config/cheese/cheese-explorer-conf.yaml"

      if [ -z "$2" ]; then
        nano $current_config_file
      else
        config_file=$(convert_to_absolute_path $2)

        # Check if inout file exists
        if [ ! -e "$config_file" ]; then
        echo "$config_file does not exist !!"
        exit 1
        fi
        
        cp $config_file $current_config_file
      fi


      if [ ! -e "$current_config_file" ]; then
      echo "Error setting up file!!"
      exit 1
      else
      echo "CHEESE explorer was configured. Please restart your cheese explorer app !"
      fi
    
      shift 2
      ;;
    
    start-app)
      shift 1
      start-explorer $@
      exit 0
      ;;
    stop-apps)
      shift 1
      stop-explorer $@
      exit 0
      ;;
    
    add-database)
      shift 1
      add-explorer-database $@
      exit 0    
      ;;
    remove-database)
      shift 1
      remove-explorer-database $@
      exit 0    
      ;;
    -h|--help)
      show_help
      ;;
    *)
      echo "Unknown option: $1"
      show_help
      ;;
  esac
done




